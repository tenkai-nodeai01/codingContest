@charset "UTF-8";
html {
  font-family: 'Noto Sans Japanese Medium';
}

/* ==========================================================================
   Normalize.scss settings
   ========================================================================== */
/**
 * Includes legacy browser support IE6/7
 *
 * Set to false if you want to drop support for IE6 and IE7
 */
/* Base
    ========================================================================== */
/**
  * 1. Set default font family to sans-serif.
  * 2. Prevent iOS and IE text size adjust after device orientation change,
  *    without disabling user zoom.
  * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using
  *  `em` units.
  */
html {
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

html::-webkit-scrollbar {
  display: none;
}

/**
  * Remove default margin.
  */
body {
  margin: 0;
}

/* HTML5 display definitions
    ========================================================================== */
/**
  * Correct `block` display not defined for any HTML5 element in IE 8/9.
  * Correct `block` display not defined for `details` or `summary` in IE 10/11
  * and Firefox.
  * Correct `block` display not defined for `main` in IE 11.
  */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
  * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
  * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
  */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
  * Prevents modern browsers from displaying `audio` without controls.
  * Remove excess height in iOS 5 devices.
  */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
  * Address `[hidden]` styling not present in IE 8/9/10.
  * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
  */
[hidden],
template {
  display: none;
}

/* Links
    ========================================================================== */
/**
  * Remove the gray background color from active links in IE 10.
  */
a {
  background-color: transparent;
}

/**
  * Improve readability of focused elements when they are also in an
  * active/hover state.
  */
a:active, a:hover {
  outline: 0;
}

/* Text-level semantics
    ========================================================================== */
/**
  * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
  */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
  * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
  */
b,
strong {
  font-weight: bold;
}

/**
  * Address styling not present in Safari and Chrome.
  */
dfn {
  font-style: italic;
}

/**
  * Address variable `h1` font-size and margin within `section` and `article`
  * contexts in Firefox 4+, Safari, and Chrome.
  */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
  * Addresses styling not present in IE 8/9.
  */
mark {
  background: #ff0;
  color: #000;
}

/**
  * Address inconsistent and variable font size in all browsers.
  */
small {
  font-size: 80%;
}

/**
  * Prevent `sub` and `sup` affecting `line-height` in all browsers.
  */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
    ========================================================================== */
/**
  * 1. Remove border when inside `a` element in IE 8/9/10.
  * 2. Improves image quality when scaled in IE 7.
  */
img {
  border: 0;
}

/**
  * Correct overflow not hidden in IE 9/10/11.
  */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
    ========================================================================== */
/**
  * Address margin not present in IE 8/9 and Safari.
  */
figure {
  margin: 1em 40px;
}

/**
  * Address differences between Firefox and other browsers.
  */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0;
}

/**
  * Contain overflow in all browsers.
  */
pre {
  overflow: auto;
}

/**
  * Address odd `em`-unit font size rendering in all browsers.
  * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.
  */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
    ========================================================================== */
/**
  * Known limitation: by default, Chrome and Safari on OS X allow very limited
  * styling of `select`, unless a `border` property is set.
  */
/**
  * 1. Correct color not being inherited.
  *  Known issue: affects color of disabled elements.
  * 2. Correct font properties not being inherited.
  * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
  * 4. Improves appearance and consistency in all browsers.
  */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
  * Address `overflow` set to `hidden` in IE 8/9/10/11.
  */
button {
  overflow: visible;
}

/**
  * Address inconsistent `text-transform` inheritance for `button` and `select`.
  * All other form control elements do not inherit `text-transform` values.
  * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
  * Correct `select` style inheritance in Firefox.
  */
button,
select {
  text-transform: none;
}

/**
  * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
  *  and `video` controls.
  * 2. Correct inability to style clickable `input` types in iOS.
  * 3. Improve usability and consistency of cursor style between image-type
  *  `input` and others.
  * 4. Removes inner spacing in IE 7 without affecting normal text inputs.
  *  Known issue: inner spacing remains in IE 6.
  */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
  * Re-set default cursor for disabled elements.
  */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
  * Remove inner padding and border in Firefox 4+.
  */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
  * Address Firefox 4+ setting `line-height` on `input` using `!important` in
  * the UA stylesheet.
  */
input {
  line-height: normal;
}

/**
  * 1. Address box sizing set to `content-box` in IE 8/9/10.
  * 2. Remove excess padding in IE 8/9/10.
  *  Known issue: excess padding remains in IE 6.
  */
input[type="checkbox"],
input[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
  * Fix the cursor style for Chrome's increment/decrement buttons. For certain
  * `font-size` values of the `input`, it causes the cursor style of the
  * decrement button to change from `default` to `text`.
  */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
  * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
  * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
  */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 2 */
}

/**
  * Remove inner padding and search cancel button in Safari and Chrome on OS X.
  * Safari (but not Chrome) clips the cancel button when the search input has
  * padding (and `textfield` appearance).
  */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
  * Define consistent border, margin, and padding.
  */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
  * 1. Correct `color` not being inherited in IE 8/9/10/11.
  * 2. Remove padding so people aren't caught out if they zero out fieldsets.
  * 3. Corrects text not wrapping in Firefox 3.
  * 4. Corrects alignment displayed oddly in IE 6/7.
  */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
  * Remove default vertical scrollbar in IE 8/9/10/11.
  */
textarea {
  overflow: auto;
}

/**
  * Don't inherit the `font-weight` (applied by a rule above).
  * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
  */
optgroup {
  font-weight: bold;
}

/* Tables
    ========================================================================== */
/**
  * Remove most spacing between table cells.
  */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

@font-face {
  font-family: 'Noto Sans Japanese Regular';
  font-style: normal;
  font-weight: 400;
  src: url("../assets/fonts/NotoSansCJKjp-Regular.woff2") format("woff2"), url("../assets/fonts/NotoSansCJKjp-Regular.woff") format("woff"), url("../assets/fonts/NotoSansCJKjp-Regular.ttf") format("truetype"), url("../assets/fonts/NotoSansCJKjp-Regular.eot") format("embedded-opentype");
}

@font-face {
  font-family: 'Noto Sans Japanese Medium';
  font-style: normal;
  font-weight: 500;
  src: url("../assets/fonts/NotoSansCJKjp-Medium.woff2") format("woff2"), url("../assets/fonts/NotoSansCJKjp-Medium.woff") format("woff"), url("../assets/fonts/NotoSansCJKjp-Medium.ttf") format("truetype"), url("../assets/fonts/NotoSansCJKjp-Medium.eot") format("embedded-opentype");
}

@font-face {
  font-family: 'Noto Sans Japanese Bold';
  font-style: normal;
  font-weight: 700;
  src: url("../assets/fonts/NotoSansCJKjp-Bold.woff2") format("woff2"), url("../assets/fonts/NotoSansCJKjp-Bold.woff") format("woff"), url("../assets/fonts/NotoSansCJKjp-Bold.ttf") format("truetype"), url("../assets/fonts/NotoSansCJKjp-Bold.eot") format("embedded-opentype");
}

/* フォントカラー*/
/*
    矢印アイコン（下向き）
    引数はmargin-top
*/
/*
    矢印アイコン（上向き）
    引数はmargin-top
*/
html {
  font-size: 14px;
  background-color: #C7C6BF;
  text-decoration: none;
}

@media only screen and (min-width: 940px) {
  html {
    font-size: 16px;
  }
}

.block-1 {
  grid-area: main;
}

.block-2 {
  grid-area: right;
}

.block-3 {
  grid-area: footer;
}

.l-content {
  width: 100%;
  position: absolute;
  height: 100%;
  background-color: #C7C6BF;
}

.l-content__wrapper {
  padding: 45px 0 0 0;
  overflow: auto;
  display: -ms-grid;
  display: grid;
  height: auto;
  grid-template-areas: 'main' 'right';
}

.l-content__wrapper .l-main-wrapper {
  width: auto;
}

@media only screen and (min-width: 940px) {
  .l-content__wrapper {
    padding: 107px 32px 0 32px;
    grid-template-areas: 'main right';
    grid-gap: 15px;
    margin: 0 auto;
    margin-bottom: 30px;
    grid-template-columns: 50% 50%;
  }
}

@media only screen and (min-width: 1280px) {
  .l-content__wrapper {
    grid-template-columns: 40% 60%;
  }
}

.l-header {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  display: -webkit-flex;
  width: 100%;
  height: 44px;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  position: fixed;
  background-color: #C7C6BF;
  z-index: 1;
}

.l-header .l-header__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  display: -webkit-flex;
  width: 100%;
  margin: 0 auto;
}

.l-header .header-wrapper {
  width: 40px;
  padding: 5px 0;
}

.l-header .l-header__container {
  height: 100%;
  display: inline-block;
  width: auto;
  margin: 0;
}

@media only screen and (min-width: 940px) {
  .l-header {
    width: 100%;
    height: 105px;
  }
  .l-header .header-wrapper {
    width: 14vw;
  }
}

.l-footer-wrapper {
  display: block;
  background-color: #C7C6BF;
  padding-bottom: 15px;
}

@media only screen and (min-width: 940px) {
  .l-footer-wrapper {
    display: none;
  }
}

.l-footer-wrapper .c-footer {
  text-align: center;
  display: inline-block;
  width: 100%;
}

.l-footer-wrapper .c-footer .c-footer__title {
  font-size: 13px;
  margin-top: unset;
  color: #727262;
  font-family: 'Noto Sans Japanese Bold';
  font-style: normal;
  font-weight: 700;
}

.l-footer-wrapper .c-footer .c-footer__logo {
  height: 80%;
  max-width: 190px;
  margin: 0 auto 30px auto;
}

.l-footer-wrapper .c-footer .c-footer__submenu {
  display: inline-block;
}

.l-footer-wrapper .c-footer .c-footer__submenu .submenu-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  display: -webkit-flex;
  font-size: 14px;
}

.l-footer-wrapper .c-footer .c-footer__submenu .submenu-wrapper .submenu-patoro {
  background-color: #ffffff;
  color: #BF9200;
  text-decoration: none;
  padding: 3px 5px;
  margin-right: 5px;
  font-size: 13px;
  font-family: 'Noto Sans Japanese Bold';
  font-style: normal;
  font-weight: 700;
}

.l-footer-wrapper .c-footer .c-footer__submenu .submenu-wrapper .submenu-patoro:hover {
  color: #ffffff;
  background-color: #BF9200;
}

.l-footer-wrapper .c-footer .c-footer__submenu .submenu-wrapper .submenu-artist {
  color: #ffffff;
  background-color: #BF9200;
  text-decoration: none;
  padding: 2px 5px;
  font-size: 13px;
  font-family: 'Noto Sans Japanese Bold';
  font-style: normal;
  font-weight: 700;
}

.l-footer-wrapper .c-footer .c-footer__submenu .submenu-wrapper .submenu-artist:hover {
  background-color: #4E4E40;
  color: #ffffff;
}

.l-aside-wrapper {
  padding: 10px 2% 10px 2%;
  width: auto;
}

.l-aside-wrapper .l-aside__header {
  display: inline-block;
  width: 100%;
}

.l-aside-wrapper .l-aside__header .header-logo {
  background: url(../assets/minify-img/light.svg) no-repeat 100% 100%;
  float: left;
  width: 22px;
  height: 22px;
  margin: 1%;
}

@media only screen and (min-width: 768px) {
  .l-aside-wrapper .l-aside__header .header-logo {
    margin: 1% 1% 1% 0;
    height: 26px;
    width: 26px;
  }
}

.l-aside-wrapper .l-aside__header .header-text {
  font-size: 14px;
  margin: 3px 0 0 0;
  display: inline-block;
  color: #4E4E40;
  margin: 1vw 0 0 0;
  font-family: 'Noto Sans Japanese Bold';
  font-style: normal;
  font-weight: 700;
}

@media only screen and (min-width: 768px) {
  .l-aside-wrapper .l-aside__header .header-text {
    font-size: 22px;
    margin: 0.6vw 0 0 0;
  }
}

.l-artwork__wrapper {
  margin: 44px 0 0 0;
  background-color: #C7C6BF;
}

@media only screen and (min-width: 940px) {
  .l-artwork__wrapper {
    margin: 105px 0 0 0;
  }
}

.p-profile {
  width: 100%;
}

.p-profile .c-profile {
  background: #FAFAFA;
  display: inline-block;
  width: 100%;
}

.p-profile .c-profile .c-profile__background {
  display: inline-block;
  width: 100%;
  height: 50vw;
  max-height: 192px;
  background: url(../assets/minify-img/iStock-994961612.jpg) no-repeat 100% 100%;
  background-size: cover;
}

@media only screen and (min-width: 768px) {
  .p-profile .c-profile .c-profile__background {
    max-height: 280px;
  }
}

@media only screen and (min-width: 940px) {
  .p-profile .c-profile .c-profile__background {
    max-height: 174px;
  }
}

.p-profile .c-work .c-work__wrapper {
  display: grid;
  width: 100%;
  background-color: #FAFAFA;
}

@media only screen and (min-width: 940px) {
  .p-profile .c-work .c-work__wrapper {
    position: unset;
  }
}

.p-profile .c-work .c-work__wrapper .title-wrapper {
  width: auto;
  margin: 0 0 0 5%;
  padding-top: 2vw;
}

@media only screen and (min-width: 940px) {
  .p-profile .c-work .c-work__wrapper .title-wrapper {
    width: 92%;
    margin: 2% auto;
  }
}

.p-profile .c-work .c-work__wrapper .title-wrapper .c-work__title {
  display: inline-block;
  color: #727262;
  margin: 0 20px 0 0;
  font-family: 'Noto Sans Japanese Medium';
  font-style: normal;
  font-weight: 500;
  font-size: 14px;
}

@media only screen and (min-width: 768px) {
  .p-profile .c-work .c-work__wrapper .title-wrapper .c-work__title {
    font-size: 16px;
  }
}

.p-profile .c-work .c-work__wrapper .title-wrapper .c-work__title:after {
  content: "";
  width: 1px;
  height: 20px;
  background-color: #727262;
  position: absolute;
  margin: 2px 0 0 14px;
}

.p-profile .c-work .c-work__wrapper .title-wrapper .title-favorite {
  display: inline-block;
  margin: 0;
  color: #BF9200;
  font-size: 14px;
  font-family: 'Noto Sans Japanese Medium';
  font-style: normal;
  font-weight: 500;
}

@media only screen and (min-width: 768px) {
  .p-profile .c-work .c-work__wrapper .title-wrapper .title-favorite {
    font-size: 16px;
  }
}

.p-profile .c-work .c-work__wrapper .title-wrapper .title-favorite:hover {
  color: #4E4E40;
  cursor: pointer;
}

.p-profile .c-work .own-img__ul {
  display: -ms-flexbox;
  display: -webkit-box;
  display: flex;
  overflow-x: scroll;
  padding: 0;
  margin: 1% 0 3% 5%;
}

.p-profile .c-work .own-img__ul::-webkit-scrollbar {
  display: none;
}

.p-profile .c-work .own-img__ul .own-img__list {
  list-style: none;
  margin-right: 2px;
}

.p-profile .c-work .own-img__ul .own-img__list .own-img-el {
  height: 20vw;
  max-height: 140px;
}

@media only screen and (min-width: 940px) {
  .p-profile .c-profile {
    margin: 0 0 15px 0;
  }
  .p-profile .c-work__wrapper .own-img__ul {
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    width: 92%;
    overflow: hidden;
  }
  .p-profile .c-work__wrapper .own-img__ul .own-img__list {
    width: calc(50% - 5px);
    margin-right: 5px;
    -o-object-fit: cover;
    object-fit: cover;
    height: 12vw;
    margin-bottom: 5px;
    overflow: hidden;
    max-height: 140px;
  }
  .p-profile .c-work__wrapper .own-img__ul .own-img__list .own-img-el {
    width: 100%;
  }
}

.p-log {
  margin-top: -2vw;
}

@media only screen and (min-width: 768px) {
  .p-log {
    margin-top: unset;
  }
}

.p-log .log-list-ol {
  list-style: none;
  padding: unset;
}

.p-log .log-list-ol .log-list__el {
  margin: 0 0 1% 0;
}

.p-log .log-list-ol .log-list__el .log-list__header {
  margin: 0;
  font-family: 'Noto Sans Japanese Medium';
  font-style: normal;
  font-weight: 500;
  color: #4E4E40;
  padding: 2% 4% 2% 4%;
  font-size: 14px;
  background-color: #F0F0EA;
}

@media only screen and (min-width: 768px) {
  .p-log .log-list-ol .log-list__el .log-list__header {
    font-size: 16px;
    padding: 2% 3% 2% 4%;
  }
}

.p-log .log-list-ol .log-list__el .log-list__header:after {
  content: "";
  float: right;
  margin-top: 10px;
  border-top: 6px solid #727262;
  border-right: 4px solid transparent;
  border-bottom: 6px solid transparent;
  border-left: 4px solid transparent;
}

.p-log .log-list-ol .log-list__el .log-list__header.is-opened:after {
  content: "";
  float: right;
  margin-top: 2px;
  border-bottom: 6px solid #727262;
  border-right: 4px solid transparent;
  border-top: 6px solid transparent;
  border-left: 4px solid transparent;
}

.p-log .log-list-ol .log-list__el .list-img__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  display: -webkit-flex;
  background-color: #F0F0EA;
  padding: 0 4% 2% 4%;
}

.p-log .log-list-ol .log-list__el .log-list-head {
  padding: 0 4% 2% 4%;
  margin: 0;
  color: #BF9200;
  font-size: 14px;
  background-color: #F0F0EA;
  font-family: 'Noto Sans Japanese Bold';
  font-style: normal;
  font-weight: 700;
}

@media only screen and (min-width: 768px) {
  .p-log .log-list-ol .log-list__el .log-list-head {
    font-size: 18px;
  }
}

.p-log .log-list-ol .log-list__el .log-list-head.beside-img {
  padding: 0;
}

.p-log .log-list-ol .log-list__el .list-img {
  width: 38%;
  height: 100%;
  margin-right: 15px;
}

.p-log .log-list-ol .log-list__el.is-opened .c-log-content {
  display: block;
}

.p-artwork__content {
  background-color: #FAFAFA;
  padding: 0 1%;
}

.p-artwork__content .content-image {
  margin: 0 0 30px 0;
  padding: 20px 2% 0 2%;
}

@media only screen and (min-width: 768px) {
  .p-artwork__content .content-image {
    padding: 20px 0 0 0;
  }
}

.p-artwork__content .content-image .image-element {
  width: 100%;
}

@media only screen and (min-width: 1280px) {
  .p-artwork__content .content-image .image-element {
    height: 84%;
  }
}

.p-artwork__content .artwork-detail .artwork-detail__title {
  margin: 0 0 0 15px;
}

@media only screen and (min-width: 768px) {
  .p-artwork__content .artwork-detail .artwork-detail__title {
    margin: 0;
  }
}

.p-artwork__content .artwork-detail .title-detail {
  font-size: 16px;
  color: #727262;
  font-family: 'Noto Sans Japanese Medium';
  font-style: normal;
  font-weight: 500;
}

@media only screen and (min-width: 768px) {
  .p-artwork__content .artwork-detail .title-detail {
    font-size: 18px;
  }
}

@media only screen and (min-width: 768px) {
  .p-artwork__content {
    padding: 2% 6%;
  }
}

@media only screen and (min-width: 940px) {
  .p-artwork__content {
    width: 100%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    display: -webkit-flex;
    padding: 0;
  }
  .p-artwork__content .content-image {
    width: 40%;
    padding-left: 11vw;
    margin-right: 10%;
    padding-top: 4vw;
    height: auto;
  }
  .p-artwork__content .artwork-detail {
    width: 40%;
    padding: 7vw 2vw 0 0;
  }
}

.p-artwork__log .p-header-wrapper {
  padding: 1.6vw 35px 1.6vw 35px;
}

@media only screen and (min-width: 768px) {
  .p-artwork__log .p-header-wrapper {
    padding: 1.6vw 5vw 1.6vw 5vw;
  }
}

.p-artwork__log .p-header-wrapper .p-log-header {
  color: #4E4E40;
  margin: unset;
  font-size: 14px;
  font-family: 'Noto Sans Japanese Bold';
  font-style: normal;
  font-weight: 700;
}

.p-artwork__log .p-header-wrapper .p-log-header:before {
  content: "";
  display: inline-block;
  height: 22px;
  width: 22px;
  background: url(../assets/minify-img/light.svg) no-repeat;
  position: absolute;
  left: 5px;
  margin-top: -2px;
}

@media only screen and (min-width: 768px) {
  .p-artwork__log .p-header-wrapper .p-log-header {
    font-size: 22px;
  }
  .p-artwork__log .p-header-wrapper .p-log-header:before {
    height: 26px;
    width: 26px;
    left: 1vw;
    margin-top: 2px;
  }
}

@media only screen and (min-width: 940px) {
  .p-artwork__log .p-header-wrapper .p-log-header:before {
    left: 4vw;
  }
}

@media only screen and (min-width: 1280px) {
  .p-artwork__log .p-header-wrapper .p-log-header:before {
    left: 12vw;
  }
}

@media only screen and (min-width: 940px) {
  .p-artwork__log .p-header-wrapper {
    padding: 1vw calc(7vw + 1px) 0 calc(7vw + 1px);
  }
}

@media only screen and (min-width: 1280px) {
  .p-artwork__log .p-header-wrapper {
    padding: 1vw 14.5vw 0 14.5vw;
  }
}

.p-artwork__log .p-log-content {
  background-color: #FAFAFA;
}

@media only screen and (max-width: 440px) {
  .p-artwork__log .p-log-content {
    font-size: 12px;
  }
}

@media only screen and (min-width: 940px) {
  .p-artwork__log .p-log-content {
    background-color: #C7C6BF;
  }
}

.c-nav__logo .c-logo__small {
  display: block;
  height: 100%;
}

.c-nav__logo .c-logo__large {
  display: none;
}

@media only screen and (min-width: 940px) {
  .c-nav__logo .c-logo__small {
    display: none;
  }
  .c-nav__logo .c-logo__large {
    display: block;
    height: 100%;
    width: 15vw;
  }
}

.c-header__nav {
  width: 100%;
}

.c-header__nav .title {
  display: none;
  color: #727262;
  margin-left: 15px;
  font-size: 13px;
}

.c-header__nav .nav-ul {
  padding: 0 0 0 30px;
}

.c-header__nav .nav-ul .nav-list {
  display: inline;
  cursor: pointer;
  margin-right: 30px;
  -webkit-transition: all 100ms 0s ease;
  transition: all 100ms 0s ease;
}

.c-header__nav .nav-ul .nav-list .nav-list__text {
  margin: 0 0 0 20px;
  text-decoration: none;
  -webkit-transition: all 100ms 0s ease;
  transition: all 100ms 0s ease;
  color: #4E4E40;
  font-size: 14px;
  font-family: 'Noto Sans Japanese Medium';
  font-style: normal;
  font-weight: 500;
}

.c-header__nav .nav-ul .nav-list.c-nav__map {
  background: url(../assets/minify-img/map_icon.svg) no-repeat;
}

.c-header__nav .nav-ul .nav-list.c-nav__map:hover {
  background: url(../assets/minify-img/map_icon_white.svg) no-repeat;
}

.c-header__nav .nav-ul .nav-list.c-nav__map:hover a {
  color: #ffffff;
}

.c-header__nav .nav-ul .nav-list.c-nav__search {
  background: url(../assets/minify-img/search_icon.svg) no-repeat;
}

.c-header__nav .nav-ul .nav-list.c-nav__search:hover {
  background: url(../assets/minify-img/search_icon_white.svg) no-repeat;
}

.c-header__nav .nav-ul .nav-list.c-nav__search:hover a {
  color: #ffffff;
}

.c-header__nav .nav-ul .nav-list.c-nav__faq {
  background: url(../assets/minify-img/q_icon.svg) no-repeat;
}

.c-header__nav .nav-ul .nav-list.c-nav__faq:hover {
  background: url(../assets/minify-img/q_icon_white.svg) no-repeat;
}

.c-header__nav .nav-ul .nav-list.c-nav__faq:hover a {
  color: #ffffff;
}

@media only screen and (max-width: 400px) {
  .c-header__nav .nav-ul .nav-list {
    margin-right: 20px;
    font-size: 12px;
  }
}

@media only screen and (min-width: 940px) {
  .c-header__nav .title {
    display: block;
  }
  .c-header__nav .nav-list__text {
    font-size: 16px !important;
  }
}

.c-header__service {
  display: none;
  text-align: center;
}

.c-header__service .footer-button-patoro,
.c-header__service .header-button-patoro {
  background-color: #ffffff;
  color: #BF9200;
}

.c-header__service .footer-button-patoro:hover,
.c-header__service .header-button-patoro:hover {
  color: #ffffff;
  background-color: #BF9200;
}

.c-header__service .footer-button-artist,
.c-header__service .header-button-artist {
  color: #ffffff;
  background-color: #BF9200;
}

.c-header__service .footer-button-artist:hover,
.c-header__service .header-button-artist:hover {
  background-color: #4E4E40;
  color: #ffffff;
}

@media only screen and (min-width: 940px) {
  .c-header__service {
    display: block;
    width: 140px;
    padding: 5px;
  }
  .c-header__service .menu-button {
    width: 100%;
    display: inline-block;
    padding: 10px 0 10px 0;
  }
  .c-header__service .menu-button.header-button-patoro {
    margin-bottom: 5px;
  }
}

.c-header__menu {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  display: -webkit-flex;
}

.c-header__menu .c-header__login {
  padding: 0 15px;
  line-height: 44px;
  background-color: #ffffff;
  color: #4E4E40;
  font-size: 14px;
  font-family: 'Noto Sans Japanese Medium';
  font-style: normal;
  font-weight: 500;
}

.c-header__menu .c-header__login:hover {
  background-color: #FFF900;
  cursor: pointer;
}

@media only screen and (min-width: 940px) {
  .c-header__menu .c-header__login {
    padding: 5px;
    width: 150px;
    text-align: center;
    line-height: 90px;
    font-size: 16px;
  }
}

.c-profile__head {
  padding: 0 0 0 5%;
  display: inline-block;
  width: auto;
  height: auto;
  margin: -45px 0 0 0;
}

@media only screen and (min-width: 768px) {
  .c-profile__head {
    margin: -55px 0 0 0;
  }
}

.c-profile__head .c-profile__thumbnail {
  height: 78px;
  width: 78px;
  display: inline-block;
}

@media only screen and (min-width: 768px) {
  .c-profile__head .c-profile__thumbnail {
    height: 88px;
    width: 88px;
  }
}

.c-profile__head .c-profile__thumbnail .thumbnail-icon {
  width: 100%;
  border: #FFFFFF 2px solid;
  border-radius: 50%;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.c-profile__head .profile-name {
  display: inline-block;
  color: #727262;
  font-size: 20px;
  margin: 0;
  vertical-align: text-bottom;
  font-family: 'Noto Sans Japanese Regular';
  font-style: normal;
  font-weight: 400;
}

@media only screen and (min-width: 768px) {
  .c-profile__head .profile-name {
    font-size: 22px;
  }
}

@media only screen and (min-width: 1280px) {
  .c-profile__head .profile-name {
    font-size: 24px;
  }
}

.c-profile__subsection {
  padding: 0 5% 0%;
}

.c-profile__subsection .user-keyword {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  display: -webkit-flex;
  list-style: none;
  padding: 0;
}

.c-profile__subsection .user-keyword .user-keyword__list {
  padding: 2px;
  background: #FFF900;
  margin: 0 2% 0 0;
}

.c-profile__subsection .user-keyword .user-keyword__list .list-word {
  text-decoration: none;
  color: #4E4E40;
  font-size: 14px;
  font-family: 'Noto Sans Japanese Medium';
  font-style: normal;
  font-weight: 500;
}

@media only screen and (min-width: 768px) {
  .c-profile__subsection .user-keyword .user-keyword__list .list-word {
    font-size: 16px;
  }
}

.c-profile__subsection .user-keyword .user-keyword__list:hover {
  background-color: #4E4E40;
}

.c-profile__subsection .user-keyword .user-keyword__list:hover .list-word {
  color: #ffffff;
}

.c-profile__subsection .follow-section-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  display: -webkit-flex;
  -ms-flex-pack: justify;
      justify-content: space-between;
  -webkit-box-pack: justify;
}

.c-profile__subsection .follow-section-wrapper .follow-section {
  padding: 0;
  list-style: none;
  display: inline;
  margin: 2% 0 0 0;
}

.c-profile__subsection .follow-section-wrapper .follow-section .follow-section-list {
  display: inline;
  margin-right: 15px;
  font-family: 'Noto Sans Japanese Regular';
  font-style: normal;
  font-weight: 400;
}

.c-profile__subsection .follow-section-wrapper .follow-section .follow-section-list .follow-section-list__title {
  display: inherit;
}

.c-profile__subsection .follow-section-wrapper .follow-section .follow-section-list .follow-section-list__number {
  display: inherit;
}

.c-profile__subsection .follow-section-wrapper .follow-button {
  color: #BF9200;
  padding: 1%;
  border: solid 2px;
  min-width: 7vw;
}

.c-profile__subsection .follow-section-wrapper .follow-button .follow-button__text {
  color: #BF9200;
  text-decoration: none;
  font-family: 'Noto Sans Japanese Medium';
  font-style: normal;
  font-weight: 500;
}

@media only screen and (min-width: 768px) {
  .c-profile__subsection .follow-section-wrapper .follow-button .follow-button__text {
    font-size: 16px;
  }
}

.c-profile__subsection .follow-section-wrapper .follow-button:hover {
  color: #ffffff;
  background-color: #BF9200;
  cursor: pointer;
}

.c-profile__subsection .follow-section-wrapper .follow-button:hover .follow-button__text {
  color: #ffffff;
}

.c-profile__subsection .follow-section-wrapper .follow-button.is-active {
  background-color: #BF9200;
}

.c-profile__subsection .follow-section-wrapper .follow-button.is-active .follow-button__text {
  color: #ffffff;
}

.c-profile__subsection .follow-section-wrapper .follow-button.is-active:hover {
  background-color: #ffffff;
  color: #BF9200;
}

.c-profile__subsection .follow-section-wrapper .follow-button.is-active:hover .follow-button__text {
  color: #BF9200;
}

.c-profile__subsection .bio-comment-wrapper {
  font-size: 14px;
  font-family: 'Noto Sans Japanese Medium';
  font-style: normal;
  font-weight: 500;
}

.c-profile__subsection .bio-comment-wrapper .comment-text {
  margin-bottom: 0;
  color: #727262;
}

.c-profile__subsection .bio-comment-wrapper .bio-link {
  color: #BF9200;
  text-decoration: none;
  font-family: 'Noto Sans Japanese Regular';
  font-style: normal;
  font-weight: 400;
}

.c-profile__subsection .bio-comment-wrapper .bio-link:hover {
  color: #4E4E40;
}

.c-profile__subsection .sns-icon-wrapper {
  list-style: none;
  padding: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  display: -webkit-flex;
}

.c-profile__subsection .sns-icon-wrapper .icon-list {
  display: inline-block;
  margin: 0 5% 0 0;
}

.c-profile__subsection .sns-icon-wrapper .icon-list .icon-list__wrapper .sns-icon-el {
  width: 35px;
  position: absolute;
}

.c-profile__subsection .sns-icon-wrapper .icon-list .icon-list__wrapper .sns-icon-el:hover {
  opacity: 0;
}

.c-profile__subsection .sns-icon-wrapper .icon-list .icon-list__wrapper.twitter-wrapper:after {
  content: url(../assets/minify-img/twitter_icon_h.svg);
}

.c-profile__subsection .sns-icon-wrapper .icon-list .icon-list__wrapper.instagram-wrapper:after {
  content: url(../assets/minify-img/insta_icon_h.svg);
}

.c-profile__subsection .sns-icon-wrapper .icon-list .icon-list__wrapper.facebook-wrapper:after {
  content: url(../assets/minify-img/facebook_icon_h.svg);
}

.c-profile__subsection .sns-icon-wrapper .icon-list .icon-list__wrapper:after {
  width: 35px;
  display: inline-block;
  opacity: 1;
  z-index: 0;
}

.c-profile__subsection .user-description {
  padding: 0;
}

@media only screen and (min-width: 940px) {
  .c-profile__subsection .user-description {
    margin: 0 0 2% 0;
  }
}

.c-profile__subsection .user-description .user-description__icon {
  display: block;
  width: 12px;
  height: 100%;
  margin-right: 5px;
  background: url(../assets/minify-img/fav_icon.svg) 100% 20% no-repeat;
  float: left;
}

.c-profile__subsection .user-description .user-description__list {
  display: inline-block;
  margin-right: 3%;
}

.c-profile__subsection .user-description .user-description__list.first-list:before {
  content: "";
  display: inline-block;
  width: 12px;
  height: 12px;
  margin-left: -2px;
  background: url(../assets/minify-img/fav_icon.svg) 100% 20% no-repeat;
}

.c-profile__subsection .user-description .user-description__list .description-keyword {
  text-decoration: none;
  font-size: 14px;
  color: #BF9200;
  font-family: 'Noto Sans Japanese Medium';
  font-style: normal;
  font-weight: 500;
}

.c-profile__subsection .user-description .user-description__list .description-keyword:hover {
  color: #4E4E40;
}

.c-log-list {
  padding: 15px 4% 15px 4%;
  margin-top: 0;
}

@media only screen and (min-width: 768px) {
  .c-log-list {
    font-size: 16px;
  }
}

.c-log-list .year-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  display: -webkit-flex;
  margin: 0 0 12px 0;
  color: #727262;
  font-size: 14px;
  font-family: 'Noto Sans Japanese Medium';
  font-style: normal;
  font-weight: 500;
}

@media only screen and (min-width: 940px) {
  .c-log-list .year-list {
    font-size: 16px;
  }
}

.c-log-list .year-list:last-child {
  margin: 0;
}

.c-log-list .c-log-info {
  margin-left: 10px;
  max-width: 43vw;
  position: relative;
}

.c-log-list .c-log-info .info-content {
  display: inline;
}

.c-log-list .c-log-info .linked-content {
  padding: 3px;
  background-color: #FFF900;
  text-decoration: none;
  color: #727262;
}

.c-log-list .c-log-info .linked-content:hover {
  background-color: #4E4E40;
  color: #ffffff;
}

.c-log-list .c-log-info:before {
  content: "";
  width: 1px;
  height: 100%;
  position: absolute;
  background: #727262;
  display: inline-block;
  margin-left: -5px;
}

@media only screen and (min-width: 940px) {
  .c-log-list .year-list {
    margin: 0;
    background-color: #FAFAFA;
  }
  .c-log-list .c-log-year {
    padding: 12px 15px;
    width: 200px;
    text-align: right;
    background-color: #F0F0EA;
  }
  .c-log-list .c-log-info {
    padding: 12px 15px;
  }
  .c-log-list .c-log-info:before {
    display: none;
  }
  .c-log-list .year-list:first-child .c-log-year,
  .c-log-list .year-list:first-child .c-log-info {
    padding: 25px 15px 12px 15px;
  }
  .c-log-list .year-list:last-child .c-log-year,
  .c-log-list .year-list:last-child .c-log-info {
    padding: 12px 15px 25px 15px;
  }
}

@media only screen and (min-width: 1280px) {
  .c-log-list {
    padding: 15px 12% 10% 12%;
  }
}

.c-art-subdetail .c-art-subdetail__list {
  padding: 0 0 0 15px;
  list-style: none;
}

@media only screen and (min-width: 768px) {
  .c-art-subdetail .c-art-subdetail__list {
    font-size: 16px;
    padding: 0;
  }
}

.c-art-subdetail .c-art-subdetail__list .subdetail-list__child {
  margin-bottom: 5px;
  color: #727262;
  font-family: 'Noto Sans Japanese Medium';
  font-style: normal;
  font-weight: 500;
}

.c-art-subdetail .c-art-subdetail__list .subdetail-list__child.art-size {
  font-family: 'Noto Sans Japanese Regular';
  font-style: normal;
  font-weight: 400;
}

.c-art-subdetail .c-art-subdetail__list .subdetail-list__child .list-text {
  color: #BF9200;
  text-decoration: none;
}

.c-art-subdetail .c-art-subdetail__list .subdetail-list__child .list-text:hover {
  color: #4E4E40;
}

.c-art-description {
  margin: 0 0 0 15px;
  display: inline-block;
  list-style: none;
  padding: 0;
}

@media only screen and (min-width: 768px) {
  .c-art-description {
    margin: 0;
  }
}

.c-art-description .description-term {
  padding: 2px 5px;
  float: left;
  background-color: #BF9200;
  margin-left: 3px;
  min-width: 30px;
  text-align: center;
}

.c-art-description .description-term .description-term__text {
  text-decoration: none;
  color: #ffffff;
  font-family: 'Noto Sans Japanese Medium';
  font-style: normal;
  font-weight: 500;
}

.c-art-description .description-term:hover {
  background-color: #4E4E40;
}

.c-favorite-wrapper {
  padding-bottom: 20px;
  text-align: center;
}

.c-favorite-wrapper .favorite-icon {
  margin-bottom: -15px;
  margin-top: 20px;
  display: inline-block;
  width: 22px;
  height: 22px;
  cursor: pointer;
  background: url(../assets/minify-img/fav_btn_off.svg) 50% 50% no-repeat;
}

.c-favorite-wrapper .favorite-icon.is-liked {
  background: url(../assets/minify-img/fav_btn_on.svg) 50% 50% no-repeat;
}

@media only screen and (min-width: 940px) {
  .c-favorite-wrapper .favorite-icon {
    width: 27px;
    height: 23px;
  }
}

.c-favorite-wrapper .favourite-count:hover .link-text {
  color: #4E4E40;
}

.c-favorite-wrapper .favourite-count .link-text {
  text-decoration: none;
  color: #BF9200;
  font-family: 'Noto Sans Japanese Medium';
  font-style: normal;
  font-weight: 500;
}

.c-favorite-wrapper .favourite-count .favourite-count__number {
  font-size: 14px;
}

@media only screen and (min-width: 940px) {
  .c-favorite-wrapper .favourite-count .favourite-count__number {
    font-size: 16px;
  }
}

.c-favorite-wrapper .favourite-count .favourite-count__label {
  font-size: 12px;
}

@media only screen and (min-width: 940px) {
  .c-favorite-wrapper .favourite-count .favourite-count__label {
    font-size: 14px;
  }
}

.c-art-comment {
  margin: auto;
  padding: 0 0 15px 0;
}

@media only screen and (min-width: 940px) {
  .c-art-comment {
    width: auto;
  }
}

.c-art-comment .comment-wrapper {
  padding: 12px 10px 12px 18px;
  background-color: #F0F0EA;
}

.c-art-comment .comment-wrapper .comment-wrapper__count {
  font-size: 14px;
  font-family: 'Noto Sans Japanese Medium';
  font-style: normal;
  font-weight: 500;
}

.c-art-comment .comment-wrapper .comment-wrapper__content {
  width: 100%;
  height: 100px;
  display: none;
}

.c-art-comment .comment-wrapper:hover {
  background-color: #ffffff;
  cursor: pointer;
}

.c-art-comment .comment-wrapper .comment-wrapper__icon {
  content: "";
  float: right;
  margin-top: 5px;
  border-top: 8px solid #727262;
  border-right: 6px solid transparent;
  border-bottom: 8px solid transparent;
  border-left: 6px solid transparent;
}

.c-art-comment .comment-wrapper.is-active .comment-wrapper__content {
  display: inline-block;
}

.c-art-comment .comment-wrapper.is-active .comment-wrapper__icon {
  content: "";
  float: right;
  margin-top: -5px;
  border-bottom: 8px solid #727262;
  border-right: 6px solid transparent;
  border-top: 8px solid transparent;
  border-left: 6px solid transparent;
}

.c-log-content {
  list-style: none;
  padding: 0;
  display: none;
}

.c-log-content .c-log-content__list {
  padding: 2% 4%;
  margin-bottom: 2px;
  background-color: #FAFAFA;
  min-height: 10vw;
}

.c-log-content .c-log-content__list:last-child {
  margin-bottom: unset;
}

.c-log-content .c-log-content__list .log-title {
  color: #BF9200;
}

.c-log-content .c-log-content__list .log-title .icon-wrapper {
  display: inline;
}

.c-log-content .c-log-content__list .log-title .icon-wrapper .log-title__count {
  cursor: pointer;
  margin: 0 15px 0 0;
  font-family: 'Noto Sans Japanese Bold';
  font-style: normal;
  font-weight: 700;
}

.c-log-content .c-log-content__list .log-title .icon-wrapper .log-title__count:after {
  content: "";
  width: 1px;
  height: 15px;
  background-color: #4E4E40;
  position: absolute;
  margin: 3px 0 0 10px;
}

@media only screen and (min-width: 768px) {
  .c-log-content .c-log-content__list .log-title .icon-wrapper .log-title__count {
    font-size: 18px;
  }
  .c-log-content .c-log-content__list .log-title .icon-wrapper .log-title__count:after {
    height: 21px;
  }
}

.c-log-content .c-log-content__list .log-title .icon-wrapper .log-title__count:hover {
  color: #4E4E40;
}

.c-log-content .c-log-content__list .log-title .icon-wrapper .log-title__icon {
  width: 15px;
}

.c-log-content .c-log-content__list .log-title .log-title__head {
  display: inline;
  font-size: 14px;
  font-family: 'Noto Sans Japanese Bold';
  font-style: normal;
  font-weight: 700;
}

@media only screen and (min-width: 768px) {
  .c-log-content .c-log-content__list .log-title .log-title__head {
    font-size: 18px;
  }
}

.c-log-content .c-log-content__list .log-title .log-title__head:hover {
  color: #4E4E40;
}

.c-log-content .c-log-content__list .log-subdetail {
  margin-top: 10px;
}

.c-log-content .c-log-content__list .log-subdetail .log-subdetail__location {
  color: #4E4E40;
  font-size: 14px;
  font-family: 'Noto Sans Japanese Medium';
  font-style: normal;
  font-weight: 500;
}

.c-log-content .c-log-content__list .log-subdetail .log-subdetail__location:hover {
  text-decoration: none;
}

.c-log-content .c-log-content__list .log-subdetail .log-subdetail__location:before {
  content: url(../assets/minify-img/map_icon.svg);
  width: 14px;
  height: auto;
  margin-right: 2px;
  display: inline-block;
}

.c-log-content .c-log-content__list .log-subdetail .log-subdetail__tag {
  padding: 0;
  float: right;
}

.c-log-content .c-log-content__list .log-subdetail .log-subdetail__tag .tag-detail-list {
  list-style: none;
  background-color: #BF9200;
  padding: 0 3px;
  display: inline-block;
  min-width: 35px;
  text-align: center;
  font-family: 'Noto Sans Japanese Bold';
  font-style: normal;
  font-weight: 700;
}

.c-log-content .c-log-content__list .log-subdetail .log-subdetail__tag .tag-detail-list .tag-detail-text {
  text-decoration: none;
  color: #ffffff;
  font-size: 13px;
}

@media only screen and (min-width: 768px) {
  .c-log-content .c-log-content__list .log-subdetail .log-subdetail__tag .tag-detail-list .tag-detail-text {
    font-size: 15px;
  }
}

.c-log-content .c-log-content__list .log-subdetail .log-subdetail__tag .tag-detail-list:hover {
  background-color: #4E4E40;
}

.c-log-content .c-log-content__list .img-comment {
  margin: 1% 0 0 0;
  font-size: 14px;
  color: #727262;
  font-family: 'Noto Sans Japanese Regular';
  font-style: normal;
  font-weight: 400;
}

@media only screen and (min-width: 768px) {
  .c-log-content .c-log-content__list .img-comment {
    font-size: 16px;
  }
}

.c-log-content .c-log-content__list .time-label {
  font-family: 'Noto Sans Japanese Regular';
  font-style: normal;
  font-weight: 400;
  margin: 0;
  text-align: right;
  font-size: 12px;
  color: #727262;
}

.c-log-content .c-log-content__list .img-wrapper {
  margin: 2% 0 0 0;
}

.c-log-content .c-log-content__list .img-wrapper .img-wrapper__el {
  width: 100%;
}

.c-log-content .c-log-content__list .img-wrapper .img-wrapper__el.el-left {
  width: 49%;
  margin-right: 2%;
}

.c-log-content .c-log-content__list .img-wrapper .img-wrapper__el.el-right {
  width: 49%;
  float: right;
}

.c-log-content .c-log-content__list .img-wrapper.img-as-background {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  display: -webkit-flex;
  height: 23vw;
}

@media only screen and (min-width: 768px) {
  .c-log-content .c-log-content__list .img-wrapper.img-as-background {
    height: 20vw;
  }
}

.c-log-content .c-log-content__list .img-wrapper.img-as-background .crop-img {
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
